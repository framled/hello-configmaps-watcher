// Build file for holaMundo
buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'groovy'
	id 'idea'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version "1.1.4"
	id 'org.unbroken-dome.test-sets' version '4.1.0'
	id 'application'
	id 'com.diffplug.spotless' version '6.25.0'
}

ext['netty.version'] = '4.1.19.Final'

bootJar {
	archiveBaseName = 'hola-mundoservice'
	archiveVersion = appVersion
	mainClassName = 'com.hello.helloworldservice.invoker.HolamundoServiceSpringBootApp'
}
mainClassName = 'com.hello.helloworldservice.invoker.HolamundoServiceSpringBootApp'

sourceCompatibility = 21

repositories {
	mavenCentral()
}

def getGitHash = {
	->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--short', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

def getGitBranch = {
	->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

task runGitConfig(type: Exec) {
	commandLine 'git', 'config', 'core.hooksPath',  '.githooks'
}

tasks.named('build').configure {
	dependsOn runGitConfig
}

dependencyManagement {
	imports {
		mavenBom "io.opencensus:opencensus-contrib-spring-starter:$openCensusVersion"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
	}
}

dependencies {
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	compileOnly 'org.projectlombok:lombok'

	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter"
	implementation "org.springframework.boot:spring-boot-autoconfigure"
	implementation "org.springframework.boot:spring-boot-starter-cache"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation "org.springframework:spring-aspects:6.1.6"

	implementation "org.springframework.plugin:spring-plugin-core:3.0.0"
	implementation "org.openapitools:jackson-databind-nullable:0.1.0"
	implementation "jakarta.xml.bind:jakarta.xml.bind-api"
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'io.opentracing.contrib:opentracing-spring-jaeger-cloud-starter:3.3.1'
	implementation 'org.apache.logging.log4j:log4j-api:2.16.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.16.0'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation "io.micrometer:micrometer-registry-prometheus:1.12.5"
	implementation 'net.minidev:json-smart:2.4.7'
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config'

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.spockframework:spock-core:${spockVersion}"
	testImplementation "org.spockframework:spock-spring:${spockVersion}"
	testImplementation("au.com.dius.pact.provider:junit5:4.6.5")
	testRuntimeOnly 'cglib:cglib-nodep:3.2.4'
}

task exportCompileDep {
	doLast {
		mkdir("${projectDir.absolutePath}${File.separator}classes")
		def sourceDir = "${projectDir.absolutePath}${File.separator}src${File.separator}main${File.separator}java"
		def classpath = """-d ${projectDir.absolutePath}${File.separator}build
-sourcepath ${sourceDir}
-g
-encoding UTF-8
-cp """
		configurations.compileClasspath.each {
			classpath += "${it}${File.pathSeparator}"
		}
		new File(projectDir, "classes${File.separator}options.hello").text = classpath
	}
}
